{"ast":null,"code":"var _jsxFileName = \"E:\\\\curso-react\\\\MERNTASKS_test\\\\cliente\\\\src\\\\components\\\\tareas\\\\FormTarea.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n  // Extrar si un proyecto esta activo\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext; // obtener la funci贸n del context de tarea\n\n  const tareasContext = useContext(tareaContext);\n  const {\n    tareaseleccionada,\n    errortarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    limpiarTarea\n  } = tareasContext; // Effect que detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaseleccionada]); // State del formulario\n\n  const [tarea, guardarTarea] = useState({\n    nombre: ''\n  }); // extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; // Si no hay proyecto seleccionado\n\n  if (!proyecto) return null; // Array destructuring para extraer el proyecto actual\n\n  const [proyectoActual] = proyecto; // Leer los valores del formulario\n\n  const handleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // validar\n\n    if (nombre.trim() === '') {\n      validarTarea();\n      return;\n    } // Si es edici贸n o si es nueva tarea\n\n\n    if (tareaseleccionada === null) {\n      // agregar la nueva tarea al state de tareas\n      tarea.proyecto = proyectoActual._id;\n      agregarTarea(tarea);\n    } else {\n      // actualizar tarea existente\n      actualizarTarea(tarea); // Elimina tareaseleccionada del state\n\n      limpiarTarea();\n    } // Obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); // reiniciar el form\n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    \"data-cy\": \"form-tarea\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-cy\": \"input-tarea\",\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Tarea...\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-cy\": \"submit-tarea\",\n    type: \"submit\",\n    className: \"btn btn-primario btn-submit btn-block\",\n    value: tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))), errortarea ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }, \"El nombre de la tarea es obligatorio\") : null);\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["E:/curso-react/MERNTASKS_test/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","_id","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';  \nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la funci贸n del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    // Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada)\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [  tareaseleccionada]); \n\n    // State del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    // extraer el nombre del proyecto\n    const { nombre } = tarea;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar\n        if(nombre.trim() === '' ) {\n            validarTarea();\n            return;\n        }\n\n        // Si es edici贸n o si es nueva tarea\n        if(tareaseleccionada === null ) {\n            // agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            // actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tareaseleccionada del state\n            limpiarTarea();\n        }\n        // Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                data-cy=\"form-tarea\"\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input \n                        data-cy=\"input-tarea\"\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input \n                        data-cy=\"submit-tarea\"\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null }\n        </div>\n     );\n}\n \nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}