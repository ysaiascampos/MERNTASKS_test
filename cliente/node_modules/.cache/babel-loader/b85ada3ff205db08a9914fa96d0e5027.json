{"ast":null,"code":"var _jsxFileName = \"E:\\\\curso-react\\\\MERNTASKS_test\\\\cliente\\\\src\\\\context\\\\proyectos\\\\proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, PROYECTO_ERROR, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null,\n    msg: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); // Serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; // Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      console.log(resultado); // Insertar el proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Valida el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; // Elimina un proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      msg: state.msg,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["E:/curso-react/MERNTASKS_test/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","PROYECTO_ERROR","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","msg","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","categoria","agregarProyecto","post","console","log","mostrarError","proyectoActual","proyectoId","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos : [],\n        formulario : false,\n        errorformulario: false,\n        proyecto: null, \n        msg: null\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    // Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    // Obtener los proyectos\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            console.log(resultado);\n            // Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Valida el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    } \n\n    // Selecciona el Proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    // Elimina un proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                msg: state.msg,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n        \n    )\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}